import java.util.ArrayList;
import java.util.List;

public class ListNode{
    int data;
    ListNode next;

    public ListNode(int data){
        this.data = data;
        this.next = null;
    }

    //recieving data from the node
    public int getData(){
        return this.data;
    }

    public void assignData(int data){
        this.data = data;
    }

    public int retrieve(int n, ListNode root){
        if (root == null){
            return -1; //element not found
        } else{
            if(root.getData() == n){
                return root.getData(); //element found
            } else{
                return retrieve(n, root.next);
            }
            }
        }
    public void insert(int n, ListNode root){
        //Create new node
        ListNode newNode = new Node(n);
        if (root == null){
            root = newNode;
            return;
        } else{
            insert(n, root.next);
        }
        }
    public int delete(int n, ListNode root){
        if (root == null){
            System.out.println("Element not found");
            return -1;
        } else{
            if(root.data == n){
                root.data = -1;
                return n;

            } else{
                return delete(n, root.next);
            }
        }
        }
    public void printList(ListNode root){
        if(root == null){
            return;
        } else{
            System.out.println(root.data + "  -> ");
            printList(root.next);
        }
        }
    public ListNode reverseList(ListNode head){
        List<Integer> ListArray = new ArrayList<>();
        ListNode current = head;
        while(current != null){
            ListArray.add(current.getData());
            current = current.next;
        }
        int[] nums = new int[ListArray.size();]
        for(int i = 0; i < ListArray.size(); i++){
            nums[i] = ListArray.get(i)
        }
        ListNode newCurrent = head;
        for(int i = nums.length - 1; i >= 0; i--){
            newCurrent.assignData(nums[i]);
            newCurrent = newCurrent.next;
        }
    }

    public static void main(String[] args){
        ListNode root = new ListNode(4);
        root.insert(2,root);
        root.insert(8,root);
        root.insert(12,root);
        root.insert(5,root);
        root.insert(9,root);
        root.insert(7,root);
        root.insert(20,root);
        System.out.println("Original list;");
        root.printList(root);
        root.reverseList(root);
        System.out.println("Reversed list;");
        root.printList(root);

    }


}