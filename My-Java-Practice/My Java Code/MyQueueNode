import java.util.ArrayList;

public class MyQueueNode{

    private int front;
    private int rear;
    private ArrayList<TreeNode> queue;
    private MyStack stack1;
    private MyStack stack2;

    public MyQueueJava(){
        this.front = -1;
        this.rear = -1;
        this.queue = new ArrayList<>();
        this.stack1 = new MyStack();
        this.stack2 = new MyStack();

    }

    public void enqueue(TreeNode item){
        this.stack1.push(item);
        if(this.front == -1){
            this.front = 0;
        }
        this.rear++;
    }

    public TreeNode dequeue(){
        if(this.front == -1 || this.front > this.rear){
            return null; //Queue is empty
        } else{
            if(this.stack2.getTop() < 0){
                while(stack1.getTop() > -1){
                    stack2.push(stack1.pop());
                }
            }
            return stack2.pop();
        }
    }

    public boolean isEmpty(){
        return(this.front == -1 || this.front > this.rear);
    }
}
